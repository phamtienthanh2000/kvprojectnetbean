/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.billmanagement;

import controller.BillDAO;
import controller.ProductDAO;
import java.awt.Font;
import java.util.ArrayList;
import java.util.regex.Pattern;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import model.Bill;
import model.Client;
import model.OrderLine;
import model.Product;

/**
 *
 * @author Admin
 */
public class UpdateBillFrm extends javax.swing.JFrame {

    private Bill bill;
    private ProductDAO productDAO;
    private ArrayList<Product> allProducts;
    private ArrayList<OrderLine> chosenOrderLines;
    private OrderLine chosenOrderLine;
    private BillDAO billDAO;
    /**
     * Creates new form UpdateBillFrm
     */
    public UpdateBillFrm(Bill b) {
        this.bill = b;
        this.chosenOrderLines = bill.getOrderLines();
        productDAO = new ProductDAO();
        billDAO  = new BillDAO();
        initComponents();
        dialogEditClient.setLocationRelativeTo(null);
        dialogEditOrderLine.setLocationRelativeTo(null);
        setLocationRelativeTo(null);
        lblTitle.setFont(new Font("Serif", Font.PLAIN, 20));
        setValue();
        prepareProductComboBox();
        // txtShipmentFee.getDocument().addDocumentListener(this);
        txtShipmentFee.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                handleChange();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {

            }

            @Override
            public void changedUpdate(DocumentEvent e) {


            }

            public void handleChange() {
                if (!Pattern.matches("^\\d{1,}", txtShipmentFee.getText())) {
                    JOptionPane.showMessageDialog(null, "Vui lòng nhập lại phí vận chuyển");
                    return;
                }

                updateTotal();
            }


        });
        txtDiscount.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                handleChange();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {

            }

            @Override
            public void changedUpdate(DocumentEvent e) {

            }

            public void handleChange() {
                if (!Pattern.matches("^\\d{1,}", txtShipmentFee.getText())) {
                    JOptionPane.showMessageDialog(null, "Vui lòng nhập lại phí vận chuyển");
                    return;
                }

                updateTotal();
            }

        });
        txtDeposit.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                handleChange();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {

            }

            @Override
            public void changedUpdate(DocumentEvent e) {

            }

            public void handleChange() {
                if (!Pattern.matches("^\\d{1,}", txtShipmentFee.getText())) {
                    JOptionPane.showMessageDialog(null, "Vui lòng nhập lại phí vận chuyển");
                    return;
                }

                updateTotal();
            }
        });


    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dialogEditClient = new javax.swing.JDialog();
        jLabel10 = new javax.swing.JLabel();
        txtUpdateClientName = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtUpdateClientAddress = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtUpdateClientPhoneNumber = new javax.swing.JTextField();
        btnUpdateClient = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        dialogEditOrderLine = new javax.swing.JDialog();
        jLabel14 = new javax.swing.JLabel();
        lblProductName = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        txtUpdateAmount = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        txtUpdateSellPrice = new javax.swing.JTextField();
        btnSaveOrderLine = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        lblClientName = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        lblClientPhoneNumber = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        lblClientAddress = new javax.swing.JLabel();
        btnEditClient = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblOrderLine = new javax.swing.JTable();
        btnDeleteOrderLine = new javax.swing.JButton();
        btnEditOrderLine = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        cbxAddOrderLine = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        txtSellPrice = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtAmount = new javax.swing.JTextField();
        btnAddOrderLine = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        txtShipmentFee = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtDeposit = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtDiscount = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        lblClientID = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        lblTotal = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        lblOweAmount = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        lblTitle = new javax.swing.JLabel();

        dialogEditClient.setMinimumSize(new java.awt.Dimension(500, 400));
        dialogEditClient.setModal(true);

        jLabel10.setText("Tên khách hàng");

        jLabel11.setText("Số điện thoại");

        jLabel12.setText("Địa chỉ");

        btnUpdateClient.setText("Lưu");
        btnUpdateClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateClientActionPerformed(evt);
            }
        });

        jLabel18.setText("Chỉnh sửa thông tin khách hàng");

        javax.swing.GroupLayout dialogEditClientLayout = new javax.swing.GroupLayout(dialogEditClient.getContentPane());
        dialogEditClient.getContentPane().setLayout(dialogEditClientLayout);
        dialogEditClientLayout.setHorizontalGroup(
            dialogEditClientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogEditClientLayout.createSequentialGroup()
                .addGroup(dialogEditClientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dialogEditClientLayout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(dialogEditClientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(18, 18, 18)
                        .addGroup(dialogEditClientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtUpdateClientName)
                            .addComponent(txtUpdateClientPhoneNumber)
                            .addComponent(txtUpdateClientAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(dialogEditClientLayout.createSequentialGroup()
                        .addGap(127, 127, 127)
                        .addGroup(dialogEditClientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnUpdateClient, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(125, Short.MAX_VALUE))
        );
        dialogEditClientLayout.setVerticalGroup(
            dialogEditClientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogEditClientLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel18)
                .addGap(25, 25, 25)
                .addGroup(dialogEditClientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtUpdateClientName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(dialogEditClientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(txtUpdateClientPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(dialogEditClientLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txtUpdateClientAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addComponent(btnUpdateClient)
                .addContainerGap(80, Short.MAX_VALUE))
        );

        dialogEditOrderLine.setMinimumSize(new java.awt.Dimension(426, 300));
        dialogEditOrderLine.setModal(true);

        jLabel14.setText("Tên mặt hàng");

        lblProductName.setText("jLabel15");

        jLabel16.setText("Số lượng bán");

        jLabel17.setText("Giá bán");

        btnSaveOrderLine.setText("Lưu");
        btnSaveOrderLine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveOrderLineActionPerformed(evt);
            }
        });

        jLabel15.setText("Cập nhật sản phẩm bán");

        javax.swing.GroupLayout dialogEditOrderLineLayout = new javax.swing.GroupLayout(dialogEditOrderLine.getContentPane());
        dialogEditOrderLine.getContentPane().setLayout(dialogEditOrderLineLayout);
        dialogEditOrderLineLayout.setHorizontalGroup(
            dialogEditOrderLineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dialogEditOrderLineLayout.createSequentialGroup()
                .addContainerGap(85, Short.MAX_VALUE)
                .addGroup(dialogEditOrderLineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(dialogEditOrderLineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtUpdateSellPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblProductName, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtUpdateAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(56, 56, 56))
            .addGroup(dialogEditOrderLineLayout.createSequentialGroup()
                .addGroup(dialogEditOrderLineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(dialogEditOrderLineLayout.createSequentialGroup()
                        .addGap(157, 157, 157)
                        .addComponent(btnSaveOrderLine, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(dialogEditOrderLineLayout.createSequentialGroup()
                        .addGap(112, 112, 112)
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        dialogEditOrderLineLayout.setVerticalGroup(
            dialogEditOrderLineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogEditOrderLineLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel15)
                .addGap(27, 27, 27)
                .addGroup(dialogEditOrderLineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(lblProductName))
                .addGap(28, 28, 28)
                .addGroup(dialogEditOrderLineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(txtUpdateAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(dialogEditOrderLineLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(txtUpdateSellPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addComponent(btnSaveOrderLine)
                .addContainerGap(67, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Tên khách hàng");

        lblClientName.setText("jLabel2");

        jLabel3.setText("Số điện thoại");

        lblClientPhoneNumber.setText("jLabel4");

        jLabel5.setText("Địa chỉ");

        lblClientAddress.setText("jLabel6");

        btnEditClient.setText("Chỉnh sửa khách hàng");
        btnEditClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditClientActionPerformed(evt);
            }
        });

        tblOrderLine.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã sản phẩm", "Tên sản phẩm", "Số lượng", "Giá bán", "Thành tiền"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblOrderLine.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblOrderLineMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblOrderLine);

        btnDeleteOrderLine.setText("Xóa");
        btnDeleteOrderLine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteOrderLineActionPerformed(evt);
            }
        });

        btnEditOrderLine.setText("Sửa");
        btnEditOrderLine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditOrderLineActionPerformed(evt);
            }
        });

        jLabel2.setText("Chọn sản phẩm");

        cbxAddOrderLine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxAddOrderLineActionPerformed(evt);
            }
        });

        jLabel4.setText("Giá bán");

        jLabel6.setText("Số lượng");

        btnAddOrderLine.setText("Thêm");
        btnAddOrderLine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddOrderLineActionPerformed(evt);
            }
        });

        jLabel7.setText("phí vận chuyển");

        jLabel8.setText("Đặt trước");

        jLabel9.setText("Giảm giá");

        btnSave.setText("Lưu thay đổi");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        jLabel13.setText("Mã khách hàng");

        lblClientID.setText("jLabel14");

        jLabel19.setText("Tổng tiền  ");

        lblTotal.setText("jLabel20");

        jLabel20.setText("Còn lại");

        lblOweAmount.setText("jLabel21");

        btnBack.setText("Quay Lại");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        lblTitle.setText("Sửa Hóa Đơn");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(32, 32, 32)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblClientAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 321, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lblClientName, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(86, 86, 86)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel13))
                                .addGap(28, 28, 28)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblClientPhoneNumber, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblClientID, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbxAddOrderLine, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel4)
                                .addGap(26, 26, 26)
                                .addComponent(txtSellPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnAddOrderLine))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 708, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtShipmentFee, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtDeposit)
                                        .addGap(64, 64, 64)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel20)
                                    .addComponent(jLabel9))
                                .addGap(33, 33, 33)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtDiscount, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(50, 50, 50)
                                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(42, 42, 42)
                                        .addComponent(lblTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(lblOweAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(249, 249, 249)
                                .addComponent(btnEditClient))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(173, 173, 173)
                                .addComponent(btnEditOrderLine, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(155, 155, 155)
                                .addComponent(btnDeleteOrderLine, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(225, 225, 225)
                .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack)
                    .addComponent(lblTitle))
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(lblClientName)
                    .addComponent(jLabel13)
                    .addComponent(lblClientID))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(lblClientPhoneNumber))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(lblClientAddress)))
                .addGap(18, 18, 18)
                .addComponent(btnEditClient)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cbxAddOrderLine, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtSellPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddOrderLine))
                .addGap(31, 31, 31)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 165, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEditOrderLine)
                    .addComponent(btnDeleteOrderLine))
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtShipmentFee, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(txtDiscount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19)
                    .addComponent(lblTotal))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtDeposit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20)
                    .addComponent(lblOweAmount))
                .addGap(18, 18, 18)
                .addComponent(btnSave)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeleteOrderLineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteOrderLineActionPerformed
        if (chosenOrderLine == null) {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn một dòng trong bảng để xóa !");
            return;
        }
        int confirm = JOptionPane.showConfirmDialog(null, "Xác nhận xóa hàng : " + chosenOrderLine.getProduct().getProductName() + "?", "Xóa hàng", JOptionPane.YES_NO_OPTION);
        if (confirm == JOptionPane.YES_OPTION) {
            for (int i = 0; i < chosenOrderLines.size(); i++) {
                OrderLine orderLine = chosenOrderLines.get(i);
                if (orderLine.getProduct().getId() == chosenOrderLine.getProduct().getId()) {
                    chosenOrderLines.remove(i);
                    break;
                }

            }
            updateTable(chosenOrderLines);
        }

    }//GEN-LAST:event_btnDeleteOrderLineActionPerformed

    private void cbxAddOrderLineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxAddOrderLineActionPerformed
        String selectedItem = cbxAddOrderLine.getSelectedItem().toString();
        txtAmount.setText("");
        for (Product p : allProducts) {
            if (p.getProductName().equalsIgnoreCase(selectedItem)) {

                txtSellPrice.setText(p.getStickerPrice() + "");
                break;
            }

        }


    }//GEN-LAST:event_cbxAddOrderLineActionPerformed

    private void btnAddOrderLineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddOrderLineActionPerformed

        if (cbxAddOrderLine.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn sản phẩm");
            return;

        }
        if (!Pattern.matches("^\\d{1,}$", txtSellPrice.getText())) {
            JOptionPane.showMessageDialog(null, "Vui lòng kiểm tra giá bán");
            return;

        }
        if (!Pattern.matches("^\\d{1,}$", txtAmount.getText())) {
            JOptionPane.showMessageDialog(null, "Vui lòng kiểm tra số lượng");
            return;

        }

        String selectedItem = cbxAddOrderLine.getSelectedItem().toString();

        for (Product p : allProducts) {
            if (p.getProductName().equalsIgnoreCase(selectedItem)) {
                boolean duplicate = false;

                for (OrderLine orderLine : chosenOrderLines) {
                    Product product = orderLine.getProduct();
                    if (product.getProductName().equalsIgnoreCase(selectedItem)) {

                        duplicate = true;
                        break;
                    }
                }
                if (!duplicate) {
                    OrderLine orderLine = new OrderLine();
                    orderLine.setProduct(p);
                    orderLine.setAmount(Integer.parseInt(txtAmount.getText()));
                    orderLine.setSellPrice(Integer.parseInt(txtSellPrice.getText()));
                    orderLine.setTotal(orderLine.getTotal());
                    chosenOrderLines.add(orderLine);
                    updateTable(chosenOrderLines);
                } else {
                    JOptionPane.showMessageDialog(null, "Sản phẩm đã được thêm !");

                }

                break;
            }

        }
    }//GEN-LAST:event_btnAddOrderLineActionPerformed

    private void btnEditClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditClientActionPerformed
        txtUpdateClientName.setText(lblClientName.getText());
        txtUpdateClientPhoneNumber.setText(lblClientPhoneNumber.getText());
        txtUpdateClientAddress.setText(lblClientAddress.getText());

        dialogEditClient.setVisible(true);

      




    }//GEN-LAST:event_btnEditClientActionPerformed

    private void btnUpdateClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateClientActionPerformed
        String updateName = txtUpdateClientName.getText();
        String updatePhoneNumber = txtUpdateClientPhoneNumber.getText();
        String updateAddress = txtUpdateClientAddress.getText();

        if (updateName.isBlank() || updateName.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Vui lòng cập nhật Tên khách hàng !");
            return;
        }
        if (!Pattern.matches("^0[981]{1}\\d{8,9}$", updatePhoneNumber)) {
            JOptionPane.showMessageDialog(null, "Vui lòng cập nhật số điện thoại khách hàng !");
            return;
        }
        if (updateAddress.isBlank() || updateAddress.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Vui lòng cập nhật địa chỉ !");
            return;
        }

             lblClientName.setText(updateName);
            lblClientAddress.setText(updateAddress);
            lblClientPhoneNumber.setText(updatePhoneNumber);

        dialogEditClient.setVisible(false);
    }//GEN-LAST:event_btnUpdateClientActionPerformed

    private void btnEditOrderLineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditOrderLineActionPerformed
        if (chosenOrderLine == null) {
            JOptionPane.showMessageDialog(null, "Vui lòng chọn một hàng trong bảng để sửa !");
            return;

        }
        lblProductName.setText(chosenOrderLine.getProduct().getProductName());
        txtUpdateAmount.setText(chosenOrderLine.getAmount() + "");
        txtUpdateSellPrice.setText(chosenOrderLine.getSellPrice() + "");

        dialogEditOrderLine.setVisible(true);
        if (Pattern.matches("^\\d{1,}$", txtUpdateAmount.getText()) && Pattern.matches("^\\d{1,}$", txtUpdateSellPrice.getText())) {
            chosenOrderLine.setAmount(Integer.parseInt(txtUpdateAmount.getText()));
            chosenOrderLine.setSellPrice(Integer.parseInt(txtUpdateSellPrice.getText()));
            chosenOrderLine.setTotal(chosenOrderLine.getTotal());
            updateTable(chosenOrderLines);
        }


    }//GEN-LAST:event_btnEditOrderLineActionPerformed

    private void tblOrderLineMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblOrderLineMouseClicked
        int column = tblOrderLine.getColumnModel().getColumnIndexAtX(evt.getX());
        int row = evt.getY() / tblOrderLine.getRowHeight();
        if (row < tblOrderLine.getRowCount() - 1 && row >= 0 && column < tblOrderLine.getColumnCount() && column >= 0) {
            for (OrderLine orderLine : this.chosenOrderLines) {
                Product product = orderLine.getProduct();
                if (product.getId() == Integer.parseInt(tblOrderLine.getValueAt(row, 1).toString())) {
                    this.chosenOrderLine = orderLine;
                };

            }
        }
    }//GEN-LAST:event_tblOrderLineMouseClicked

    private void btnSaveOrderLineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveOrderLineActionPerformed
        String sellAmount = txtUpdateAmount.getText();
        String sellPrice = txtUpdateSellPrice.getText();
        if (!Pattern.matches("^\\d{1,}$", sellAmount)) {
            JOptionPane.showMessageDialog(null, "Vui lòng điền số lượng bán !");
            return;

        }
        if (!Pattern.matches("^\\d{1,}$", sellPrice)) {
            JOptionPane.showMessageDialog(null, "Vui lòng điền giá bán !");
            return;
        }

        dialogEditOrderLine.setVisible(false);

    }//GEN-LAST:event_btnSaveOrderLineActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        String regexNumber = "^\\d{1,}$";
        if (!Pattern.matches(regexNumber, txtShipmentFee.getText())) {
            JOptionPane.showMessageDialog(null, "Vui lòng nhập phí vận chuyển");
            return;
        }
        if (!Pattern.matches(regexNumber, txtDeposit.getText())) {
            JOptionPane.showMessageDialog(null, "Vui lòng nhập mục đặt trước");
            return;

        }
        if (!Pattern.matches(regexNumber, txtDiscount.getText())) {
            JOptionPane.showMessageDialog(null, "Vui lòng nhập mục giảm giá");
            return;
        }
        Client client = bill.getClient();
        client.setName(lblClientName.getText());
        client.setAddress(lblClientAddress.getText());
        client.setPhoneNumber(lblClientPhoneNumber.getText());
        bill.setShipmentFee(Integer.parseInt(txtShipmentFee.getText()));
        bill.setDiscount(Integer.parseInt(txtDiscount.getText()));
        bill.setDeposit(Integer.parseInt(txtDeposit.getText()));
        bill.setTotalAmount(bill.calculateTotalAmount());
        bill.setOweAmount(bill.getTotalAmount()-bill.getDeposit());
        bill.setStatus(bill.getOweAmount()>0?"Còn nợ":"Hết nợ");
        if(billDAO.updateBill(bill)){
        JOptionPane.showMessageDialog(null, "Cập nhật hóa đơn thành công !");
       
        }else{
                JOptionPane.showMessageDialog(null, "Cập nhật hóa đơn thất bại !");

        };
        BillManagementFrm billManagementFrm = new BillManagementFrm(bill.getUser());
        billManagementFrm.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        BillManagementFrm billManagementFrm = new BillManagementFrm(bill.getUser());
        billManagementFrm.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddOrderLine;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDeleteOrderLine;
    javax.swing.JButton btnEditClient;
    private javax.swing.JButton btnEditOrderLine;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton btnSaveOrderLine;
    private javax.swing.JButton btnUpdateClient;
    private javax.swing.JComboBox<String> cbxAddOrderLine;
    private javax.swing.JDialog dialogEditClient;
    private javax.swing.JDialog dialogEditOrderLine;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblClientAddress;
    private javax.swing.JLabel lblClientID;
    private javax.swing.JLabel lblClientName;
    private javax.swing.JLabel lblClientPhoneNumber;
    private javax.swing.JLabel lblOweAmount;
    private javax.swing.JLabel lblProductName;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JTable tblOrderLine;
    private javax.swing.JTextField txtAmount;
    private javax.swing.JTextField txtDeposit;
    private javax.swing.JTextField txtDiscount;
    javax.swing.JTextField txtSellPrice;
    private javax.swing.JTextField txtShipmentFee;
    private javax.swing.JTextField txtUpdateAmount;
    private javax.swing.JTextField txtUpdateClientAddress;
    private javax.swing.JTextField txtUpdateClientName;
    private javax.swing.JTextField txtUpdateClientPhoneNumber;
    private javax.swing.JTextField txtUpdateSellPrice;
    // End of variables declaration//GEN-END:variables

    private void setValue() {
        Client client = bill.getClient();
        lblClientID.setText(client.getId() + "");
        lblClientName.setText(client.getName());
        lblClientAddress.setText(client.getAddress());
        lblClientPhoneNumber.setText(client.getPhoneNumber());
        txtShipmentFee.setText(bill.getShipmentFee() + "");
        txtDeposit.setText(bill.getDeposit() + "");
        txtDiscount.setText(bill.getDiscount() + "");
        
        updateTable(bill.getOrderLines());
        updateTotal();
    }

    private void updateTable(ArrayList<OrderLine> orderLines) {
        String[][] data = new String[orderLines.size() + 1][6];
        OrderLine orderLine = null;
        Product product = null;
        for (int i = 0; i <= orderLines.size(); i++) {
            if (i == orderLines.size()) {
                data[i][0] = "Tổng tiền hàng";
                data[i][tblOrderLine.getColumnCount() - 1] = calculateTableSum(orderLines) + "";
                break;
            }

            orderLine = orderLines.get(i);
            product = orderLine.getProduct();
            data[i][0] = i + 1 + "";
            data[i][1] = product.getId() + "";
            data[i][2] = product.getProductName();
            data[i][3] = orderLine.getAmount() + "";
            data[i][4] = orderLine.getSellPrice() + "";
            data[i][5] = orderLine.getTotal() + "";

        }

        DefaultTableModel model = new DefaultTableModel(data, new String[]{"No .", "Id sản phẩm", "Tên sản phẩm", "Số lượng", "Giá bán", "Thành tiền "});
        tblOrderLine.setModel(model);
        updateTotal();
    }

    private int calculateTableSum(ArrayList<OrderLine> orderLines) {
        int sum = 0;
        for (OrderLine orderLine : orderLines) {
            sum += orderLine.getTotal();
        }

        return sum;
    }

    private void prepareProductComboBox() {
        allProducts = productDAO.getAllProduct();
        ArrayList<String> selections = new ArrayList<>();
        for (Product p : allProducts) {
            selections.add(p.getProductName());
        }
        DefaultComboBoxModel<String> defaultComboBoxModel = new DefaultComboBoxModel<>();
        defaultComboBoxModel.addAll(selections);
        this.cbxAddOrderLine.setModel(defaultComboBoxModel);
    }

    private void updateTotal() {
        int tableTotal = this.calculateTableSum(chosenOrderLines);
        int shipmentFee = Integer.parseInt(this.txtShipmentFee.getText());
        int discount = Integer.parseInt(this.txtDiscount.getText());

        lblTotal.setText(tableTotal+shipmentFee-discount+"");
        lblOweAmount.setText(Integer.parseInt(lblTotal.getText()) - Integer.parseInt(txtDeposit.getText()) + "");
    }

}
